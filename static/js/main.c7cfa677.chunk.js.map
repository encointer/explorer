{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/useSubstrate.js","substrate-lib/utils.js","substrate-lib/components/DeveloperConsole.js","map/MapMenu.js","map/CeremonyPhaseTimer.jsx","map/MapCeremonyPhases.jsx","map/MapNodeInfo.js","map/MapControl.js","utils.js","map/MapSidebar.js","map/MarkerIcon.js","map/CommunitiesClusters.js","map/LocationsLayer.js","Map.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","types","CUSTOM_TYPES","keyring","keyringState","api","apiState","reducer","state","action","type","payload","Error","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","Provider","value","children","useSubstrate","useContext","connect","useCallback","a","provider","WsProvider","_api","ApiPromise","on","isReady","then","useEffect","toFormat","BigJS","DeveloperConsole","util","util_crypto","memo","Sidebar","as","Menu","animation","direction","icon","inverted","vertical","visible","width","Item","href","target","Icon","name","prev","cur","phaseTimestampToTimer","timestamp","timeSec","Date","now","seconds","minutes","hours","days","daysStr","toString","concat","hoursStr","padStart","minutesStr","secondsStr","CeremonyPhaseTimer","nextPhaseTimestamp","useState","timer","setTimer","id","setInterval","clearInterval","Fragment","ceremonyPhases","formatStartingAt","toLocaleString","formatDate","small","participantCount","meetupCount","attestationCount","currentPhase","phase","counter","className","Step","Group","ordered","unstackable","join","size","phasesProps","map","idx","active","toLowerCase","filter","prop","reverse","phasesSteps","Content","Title","Label","circular","color","Description","newProp","oldProp","Blocks","blockNumber","setBlockNumber","bestNumber","derive","chain","finalized","bestNumberFinalized","unsubscribeAll","toNumber","unsub","catch","error","_","CeremonyIndex","getCurrentCeremonyIndex","query","encointerScheduler","currentCeremonyIndex","setCurrentCeremonyIndex","newCeremonyIndex","MapNodeInfoMain","nodeInfo","setNodeInfo","system","Promise","all","version","nodeName","nodeVersion","getInfo","Card","style","Header","Meta","Loader","inline","MapNodeInfo","loading","onZoomIn","onZoomOut","onClick","stackable","Button","disabled","compact","parserFixPoint","upper","lower","len","assert","raw","precision","bitLength","bits","lowerBits","length","floatPart","split","acc","bit","upperBits","decimalPart","parseInt","negative","parseI32F32","parseI64F64","mapReduce","arr","mapperFn","reducerFn","result","batchFetch","apiMethod","ids","it","responses","BigFormat","Big","MapSidebarMain","debug","onClose","onShow","hash","lastParticipantCount","lastMeetupCount","data","cid","demurrage","demurragePerBlock","ref","useRef","isVertical","bootstrappers","setBootstrappers","entry","setEntry","currentBlock","setCurrentBlock","moneySupply","setMoneySupply","encointerCurrencies","toJSON","encointerBalances","totalIssuance","principal","get","lastUpdate","applyDemurrage","Math","exp","Segment","current","padded","textAlign","sub","Message","horizontal","toFixed","isNaN","stacked","List","content","labelPosition","DivIcon","L","markerClassName","clusterClassName","iconSize","count","html","communityIcon","clusterIcon","iconActive","iconActivePulse","iconSemiactivePulse","iconSemiactive","iconInactive","locationMarker","iconUrl","shadowUrl","iconAnchor","popupAnchor","shadowSize","getClusterIcon","iconSet","green","yellow","red","getIcon","iconClass","createClusterCustomIcon","cluster","markers","getAllChildMarkers","options","markerCount","getChildCount","initialState","timers","byCID","tid","clearTimeout","CommunitiesClusters","cids","selected","subscribtionPhase","counters","attestations","position","meetups","attests","marker","newMarkers","setTimeout","push","leafletElement","refreshClusters","sourceTarget","alt","iconCreateFunction","chunkedLoading","Marker","Tooltip","offset","attest","timeout","LocationsLayer","coords","pos","initialPosition","parseLatLng","toLatLng","lat","lon","parseDemurrage","tileSetup","url","attribution","apiReady","queryName","queryMulti","sumUp","obj","Object","keys","subscribtionCeremony","lastCeremony","participants","subscribtions","setters","Map","mapRef","menu","ui","setUI","setCids","setHash","setData","setPosition","setCurrentPhase","ceremonyIndex","setCeremonyIndex","ec","es","kvReducer","locations","currencyProperties","properties","getCenter","demurrage_per_block","u8aToString","name_utf8","handlerZoom","s","getCurrentPhase","getNextPhaseTimestamp","newPhase","newPhaseTimestamp","unsubscribe","CurrencyCeremony","registry","getOrUnknown","fetchHistoricData","ceremony","encointerCeremonies","getParticipantCount","getMeetupCount","oldPhase","currencyCeremony","getter","bs58","fetchLastCeremony","U32","lastCeremonyData","subscribeToUpdates","ceremonyNumber","getAttestationCount","getters","unsubs","currencyIdentifiers","hashes","err","fetchGeodataPar","locate","invalidateSize","sidebarSize","Responsive","fireOnMount","onUpdate","portrait","onlyMobile","maxWidth","Pushable","MapMenu","setZoom","prevZoom","Pusher","marginRight","display","center","zoom","zoomControl","touchZoom","height","container","offsetHeight","calcMapOffset","onLocationFound","e","latlng","flyTo","TileLayer","getZoom","bounds","pad","fitBounds","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7cfa677.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiState: null\n};\n\nconst reducer = (state, action) => {\n  let socket = null;\n\n  switch (action.type) {\n    case 'RESET_SOCKET':\n      socket = action.payload || state.socket;\n      return { ...state, socket, api: null, apiState: null };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  return (\n    <SubstrateContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </SubstrateContext.Provider>\n  );\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nexport { SubstrateContext, SubstrateContextProvider };\n","import { useContext, useEffect, useCallback } from 'react';\nimport { ApiPromise, WsProvider } from '@polkadot/api';\n\nimport { SubstrateContext } from './SubstrateContext';\n\nconst useSubstrate = () => {\n  const [state, dispatch] = useContext(SubstrateContext);\n\n  // `useCallback` so that returning memoized function and not created\n  //   everytime, and thus re-render.\n  const { api, socket, types } = state;\n  const connect = useCallback(async () => {\n    if (api) return;\n\n    const provider = new WsProvider(socket);\n    const _api = new ApiPromise({ provider, types });\n    // We want to listen to event for disconnection and reconnection.\n    //  That's why we set for listeners.\n    _api.on('connected', () => {\n      dispatch({ type: 'CONNECT', payload: _api });\n      // `ready` event is not emitted upon reconnection. So we check explicitly here.\n      _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n    });\n    _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n    _api.on('error', () => dispatch({ type: 'CONNECT_ERROR' }));\n  }, [api, socket, types, dispatch]);\n\n  useEffect(() => {\n    connect();\n  }, [connect]);\n\n  return { ...state, dispatch };\n};\n\nexport default useSubstrate;\n","import BigJS from 'big.js';\nimport toFormat from 'toformat';\n\nconst Big = toFormat(BigJS);\n\nconst utils = {\n  prettyBalance: function (amt, opts = {}) {\n    if (typeof amt !== 'number' && typeof amt !== 'string') {\n      throw new Error(`${amt} is not a number`);\n    }\n\n    // default option values\n    opts = { power: 8, decimal: 2, unit: 'Units', ...opts };\n\n    const bn = Big(amt);\n    const divisor = Big(10).pow(opts.power);\n    const displayed = bn.div(divisor).toFormat(opts.decimal);\n    return `${displayed.toString()} ${opts.unit}`;\n  }\n};\n\nexport default utils;\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api } = useSubstrate();\n  window.api = api;\n  window.util = require('@polkadot/util');\n  window.util_crypto = require('@polkadot/util-crypto');\n  window.keyring = require('@polkadot/keyring');\n\n  return null;\n}\n","import React from 'react';\nimport { Sidebar, Menu, Icon } from 'semantic-ui-react';\n\nfunction MapMenuMain (props) {\n  return (\n    <Sidebar\n      as={Menu}\n      animation='overlay'\n      direction='left'\n      icon='labeled'\n      inverted\n      vertical\n      visible={props.visible}\n      width='thin'\n    >\n\n      <Menu.Item as='a' href='//encointer.org' target='_blank'>\n        <Icon name='book' />\n            Documentation\n      </Menu.Item>\n\n      <Menu.Item as='a' href='//encointer.org/testnet/' target='_blank' >\n        <Icon name='block layout' />\n            Testnet\n      </Menu.Item>\n\n      <Menu.Item as='a' href='//encointer.org/blog/' target='_blank'>\n        <Icon name='newspaper' />\n            Blog\n      </Menu.Item>\n\n      <Menu.Item as='a' href='//encointer.org/faq/' target='_blank'>\n        <Icon name='question circle' />\n            FAQ\n      </Menu.Item>\n\n      <Menu.Item as='a' href='//encointer.org/donate/' target='_blank'>\n        <Icon name='dollar' />\n           Donate\n      </Menu.Item>\n\n      <Menu.Item as='a' href='//encointer.org/about/' target='_blank'>\n        <Icon name='favorite' />\n           About\n      </Menu.Item>\n\n      <Menu.Item as='a' href='//github.com/encointer/encointer-node' target='_blank'>\n        <Icon name='github' />\n            Code\n      </Menu.Item>\n\n    </Sidebar>\n  );\n}\n\nexport default React.memo(MapMenuMain, (prev, cur) => prev.visible === cur.visible);\n","import React, { useEffect, useState } from 'react';\n\nconst phaseTimestampToTimer = (timestamp) => {\n  const timeSec = ((timestamp - Date.now()) / 1000) | 0;\n  if (timeSec >= 0) {\n    const seconds = timeSec % 60;\n    let minutes = (timeSec / 60) | 0;\n    let hours = minutes / 60 | 0;\n    const days = hours / 24 | 0;\n    if (hours > 0) {\n      minutes = minutes % 60;\n    }\n    if (days > 0) {\n      hours = hours % 24;\n    }\n    const daysStr = days ? days.toString().concat('d ') : '';\n    const hoursStr = hours.toString().padStart(2, '0');\n    const minutesStr = minutes.toString().padStart(2, '0');\n    const secondsStr = seconds.toString().padStart(2, '0');\n    return `${daysStr}${hoursStr}:${minutesStr}:${secondsStr}`;\n  } else {\n    return 'finished';\n  }\n};\n\nexport function CeremonyPhaseTimer (props) {\n  const { nextPhaseTimestamp } = props;\n  const [timer, setTimer] = useState('');\n\n  useEffect(() => {\n    setTimer(phaseTimestampToTimer(nextPhaseTimestamp));\n    const id = setInterval(() => {\n      setTimer(phaseTimestampToTimer(nextPhaseTimestamp));\n    }, 1000);\n    return () => clearInterval(id);\n  }, [nextPhaseTimestamp]);\n\n  return <React.Fragment>{timer}</React.Fragment>;\n}\n","import React from 'react';\nimport { Step, Label } from 'semantic-ui-react';\nimport { CeremonyPhaseTimer } from './CeremonyPhaseTimer';\n\nconst ceremonyPhases = [\n  'REGISTERING',\n  'ASSIGNING',\n  'ATTESTING'\n];\n\nconst formatDate = (timestamp) => (new Date(timestamp)).toLocaleString();\n\nconst formatStartingAt = (timestamp) => (<div><div>starting at:</div> {formatDate(timestamp)}</div>);\n\nexport default React.memo(function MapCeremonyPhases (props) {\n  const {\n    small,\n    participantCount,\n    meetupCount,\n    attestationCount,\n    currentPhase: {\n      phase: currentPhase,\n      timestamp\n    }\n  } = props;\n\n  const counter = [participantCount, meetupCount, attestationCount];\n\n  const phasesSteps = phase => {\n    const phasesProps = (currentPhase === -1 ? [] : ceremonyPhases)\n      .map((phase, idx) => ({\n        key: ceremonyPhases[idx],\n        counter: counter[idx],\n        active: (idx === currentPhase),\n        className: 'step-'.concat(ceremonyPhases[idx]).toLowerCase()\n      })).filter((prop, idx) =>\n        !small || prop.active || idx === currentPhase + 1 || (idx === 0 && currentPhase === 2)\n      );\n    return (small && currentPhase === 2) ? phasesProps.reverse() : phasesProps;\n  };\n\n  return (<div className='encointer-map-ceremony-phase'>\n    <Step.Group\n      ordered\n      unstackable\n      className={[\n        ceremonyPhases[currentPhase],\n        small ? 'small-screen' : ''\n      ].join(' ')}\n      size='mini'>{\n        phasesSteps(currentPhase)\n          .map((props, idx) => (\n            <Step {...props}>\n              <Step.Content>\n                <Step.Title>\n                  {props.key} {\n                    (idx <= currentPhase && props.counter) ? <Label circular color={props.active ? 'green' : 'grey'}>{props.counter}</Label> : null\n                  }</Step.Title>\n                <Step.Description>{\n                  (props.active)\n                    ? <div><div>time left: </div><CeremonyPhaseTimer nextPhaseTimestamp={timestamp} /></div>\n                    : (small\n                      ? formatStartingAt(timestamp)\n                      : ((idx === (currentPhase + 1) ||\n                          (idx === 0 && currentPhase === 2))\n                        ? formatStartingAt(timestamp)\n                        : null))\n                }</Step.Description>\n              </Step.Content>\n            </Step>\n          ))\n      }</Step.Group>\n  </div>);\n}, (newProp, oldProp) => {\n  return (oldProp.small === newProp.small &&\n          oldProp.participantCount === newProp.participantCount &&\n          oldProp.meetupCount === newProp.meetupCount &&\n          oldProp.attestationCount === newProp.attestationCount &&\n          oldProp.currentPhase.phase === newProp.currentPhase.phase &&\n          oldProp.currentPhase.timestamp === newProp.currentPhase.timestamp);\n});\n","import React, { useEffect, useState } from 'react';\nimport { Card, Loader } from 'semantic-ui-react';\n\nconst Blocks = React.memo(props => {\n  const { api } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const bestNumber = api && api.derive && api.derive.chain && (props.finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber);\n  useEffect(() => {\n    let unsubscribeAll;\n    bestNumber && bestNumber(blockNumber => {\n      setBlockNumber(blockNumber.toNumber());\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    })\n      .catch(console.error);\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n  return <React.Fragment>{blockNumber}</React.Fragment>;\n}, _ => true);\n\nconst CeremonyIndex = React.memo(props => {\n  const {\n    api: {\n      query: {\n        encointerScheduler: {\n          currentCeremonyIndex: getCurrentCeremonyIndex\n        }\n      }\n    }\n  } = props;\n  const [currentCeremonyIndex, setCurrentCeremonyIndex] = useState(0);\n  useEffect(() => {\n    let unsubscribeAll;\n    getCurrentCeremonyIndex(newCeremonyIndex => {\n      setCurrentCeremonyIndex(newCeremonyIndex.toNumber());\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    })\n      .catch(console.error);\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [getCurrentCeremonyIndex]);\n  return (currentCeremonyIndex\n    ? <React.Fragment>\n      <span>ceremony</span> <strong> #{currentCeremonyIndex}</strong>\n    </React.Fragment>\n    : null);\n}, _ => true);\n\nfunction MapNodeInfoMain (props) {\n  const { apiState, api } = props;\n  const [nodeInfo, setNodeInfo] = useState({});\n  const system = api && api.rpc && api.rpc.system;\n  const getCurrentCeremonyIndex = api && api.query && api.query.encointerScheduler &&\n        api.query.encointerScheduler.currentCeremonyIndex;\n\n  useEffect(() => {\n    if (system) {\n      const getInfo = async () => {\n        try {\n          const [chain, nodeName, nodeVersion] = await Promise.all([\n            system.chain(),\n            system.name(),\n            system.version()\n          ]);\n          setNodeInfo({ chain, nodeName, nodeVersion });\n        } catch (e) {\n          console.error(e);\n        }\n      };\n      getInfo();\n    }\n  }, [system]);\n\n  return (\n    <Card className='encointer-map-node-info' style={props.style || {}}>{\n      apiState === 'READY'\n        ? <React.Fragment>\n          <Card.Content className='info'>\n            <Card.Header>{nodeInfo.nodeName}</Card.Header>\n            <Card.Meta>{`${nodeInfo.chain || ''} v${nodeInfo.nodeVersion}`}</Card.Meta>\n          </Card.Content>\n          <Card.Content className='blocks'>\n            {\n              getCurrentCeremonyIndex\n                ? <React.Fragment>\n                  <Card.Meta></Card.Meta>\n                  <div className='block-current'>current block #<Blocks api={api} /></div>\n                  <div className='finalized-current'>finalized block #<Blocks finalized api={api} /></div>\n                  <div className='ceremony'><CeremonyIndex api={api} /></div>\n                </React.Fragment>\n                : <React.Fragment>\n                  <div className='loading'>\n                    <Loader active size='medium' inline='centered' />\n                  </div>\n                </React.Fragment>\n            }\n          </Card.Content>\n        </React.Fragment>\n        : <Card.Content className='loading'>\n          {\n            apiState !== 'ERROR'\n              ? <Card.Meta><Loader active size='small' inline /> Connecting to the blockchain</Card.Meta>\n              : <Card.Meta className='error'>Error connecting to the blockchain</Card.Meta>\n          }\n        </Card.Content>\n    }</Card>\n  );\n}\n\nexport default function MapNodeInfo (props) {\n  return <MapNodeInfoMain {...props} />;\n}\n","import React from 'react';\nimport { Button, Menu } from 'semantic-ui-react';\n\nfunction MapControl (props) {\n  const { loading, onZoomIn, onZoomOut, onClick } = props;\n  return (\n    <Menu className='encointer-map-floating-widgets' stackable size='mini' vertical>\n      <Menu.Item >\n        <Button onClick={onClick} loading={loading} disabled={loading} icon='sidebar' className='encoiner-menu-button' />\n      </Menu.Item>\n      <Menu.Item >\n        <Button.Group vertical compact size='small'>\n          <Button icon='plus' onClick={onZoomIn}/>\n          <Button icon='minus' onClick={onZoomOut}/>\n        </Button.Group>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default React.memo(MapControl, (prev, cur) => prev.loading === cur.loading);\n","import assert from 'assert';\n\n/// Function to produce function to convert fixed-point to Number\n///\n/// Fixed interpretation of u<N> place values\n/// ... ___ ___ ___ ___ . ___ ___ ___ ___ ...\n/// ...  8   4   2   1    1/2 1/4 1/8 1/16...\n///\n/// Parameters:\n/// upper: 0..128 - number of bits in decimal part\n/// lower: 0..128 - number of bits in fractional part\n///\n/// Produced function parameters:\n/// raw: substrate_fixed::types::I<upper>F<lower> as I<upper+lower>\n/// precision: 0..lower number bits in fractional part to process\nexport function parserFixPoint (upper, lower) {\n  const len = upper + lower;\n  assert(len >= 8, `Bit length can't be less than 8, provided ${len}`);\n  assert(len <= 128, `Bit length can't be bigger than 128, provided ${len}`);\n  assert(!(len & (len - 1)), `Bit length should be power of 2, provided ${len}`);\n\n  return (raw, precision = lower) => {\n    assert(raw.bitLength() === len, 'Bit length is not equal to ' + len);\n    const bits = raw.toString(2, len);\n    const lowerBits = (lower > bits.length\n      ? bits.padStart(lower, '0')\n      : bits).slice(-lower, -1 * (lower - precision) || undefined);\n    const floatPart = lowerBits\n      .split('')\n      .reduce((acc, bit, idx) => {\n        acc = acc + (bit === '1' ? 1 / 2 ** (idx + 1) : 0);\n        return acc;\n      }, 0);\n    const upperBits = bits.slice(0, -lower);\n    const decimalPart = upperBits ? parseInt(upperBits, 2) : 0;\n    return decimalPart + (raw.negative ? -floatPart : floatPart);\n  };\n}\n\nexport const parseI4F4 = parserFixPoint(4, 4);\n\nexport const parseI8F8 = parserFixPoint(8, 8);\n\nexport const parseI16F16 = parserFixPoint(16, 16);\n\nexport const parseI32F32 = parserFixPoint(32, 32);\n\nexport const parseI64F64 = parserFixPoint(64, 64);\n\n/// map and reduce helper\nfunction mapReduce (arr, mapperFn, reducerFn) {\n  let result = arr;\n  if (mapperFn) {\n    result = result.map(mapperFn);\n  }\n  if (reducerFn) {\n    result = result.reduce(reducerFn, {});\n  }\n  return result;\n}\n\n/// Function that calls provided api method parameters provided in ids array\n/// Will return value when all promises finishes optionally converted with mapperFn\nexport async function batchFetch (apiMethod, ids, mapperFn, reducerFn) {\n  const responses = await Promise.all(ids.map(it => apiMethod(it))); // array of fetching promises\n  return mapReduce(responses, mapperFn, reducerFn); // Called when all promises fullfils\n}\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\nimport { Button, Segment, Header, Icon, List, Message, Sidebar } from 'semantic-ui-react';\nimport Big from 'big.js';\nimport toFormat from 'toformat';\n\nimport { parseI64F64 } from '../utils';\n\nconst BigFormat = toFormat(Big);\n\nfunction MapSidebarMain (props) {\n  const {\n    api,\n    debug,\n    onClose,\n    onShow,\n    hash,\n    direction,\n    width,\n    participantCount,\n    lastParticipantCount,\n    lastMeetupCount,\n    meetupCount,\n    data: {\n      name, cid, demurrage, demurragePerBlock\n    }\n  } = props;\n  const visible = !!hash.length;\n  const ref = useRef();\n  const isVertical = direction === 'top' || direction === 'bottom';\n\n  const [bootstrappers, setBootstrappers] = useState([]);\n  const [entry, setEntry] = useState(null);\n  const [currentBlock, setCurrentBlock] = useState(1);\n  const [moneySupply, setMoneySupply] = useState(0);\n\n  useEffect(() => {\n    let unsubscribeAll;\n    const bestNumber = api.derive.chain.bestNumber;\n    bestNumber(blockNumber => {\n      setCurrentBlock(blockNumber.toNumber());\n    }).then(unsub => {\n      console.log('U', unsub);\n      unsubscribeAll = unsub;\n    });\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.derive.chain.bestNumber]);\n\n  /// Fetch bootstrappers\n  useEffect(() => {\n    let unsubscribeAll;\n    if (cid && api.query.encointerCurrencies) {\n      debug && console.log('GETTING BOOTSTRAPPERS', cid);\n      api.query.encointerCurrencies\n        .bootstrappers(cid, _ => {\n          debug && console.log('BOOTSTRAPPERS RECEIVED', _);\n          setBootstrappers(_.toJSON());\n        }).then(unsub => {\n          unsubscribeAll = unsub;\n        })\n        .catch(console.error);\n      return () => unsubscribeAll && unsubscribeAll();\n    }\n  }, [api.query.encointerCurrencies, cid, debug]);\n\n  /// Fetch money supply\n  useEffect(() => {\n    let unsubscribeAll;\n    if (cid && api.query.encointerBalances) {\n      debug && console.log('GETTING MONEYSUPPLY', cid);\n      api.query.encointerBalances\n        .totalIssuance(cid, _ => {\n          debug && console.log('MONEYSUPPLY RECEIVED', _);\n          setEntry({\n            principal: parseI64F64(_.get('principal')),\n            lastUpdate: _.get('last_update').toNumber()\n          });\n        }).then(unsub => {\n          unsubscribeAll = unsub;\n        })\n        .catch(console.error);\n      return () => unsubscribeAll && unsubscribeAll();\n    }\n  }, [api.query.encointerBalances, cid, debug]);\n\n  /// Apply demurrage\n  const applyDemurrage = useCallback(() => {\n    const moneySupply = (entry && entry.principal > 0) ? entry.principal * Math.exp(-demurragePerBlock * (currentBlock - entry.lastUpdate)) : 0;\n    setMoneySupply(moneySupply);\n  }, [demurragePerBlock, currentBlock, entry]\n  );\n\n  useEffect(() => {\n    applyDemurrage();\n  }, [applyDemurrage]);\n\n  /// Handler when sidebar completely shows (animation stops)\n  const handleShow = () => ref.current && onShow(ref.current.ref.current[\n    `offset${isVertical ? 'Height' : 'Width'}`\n  ]);\n\n  return (\n    <Sidebar\n      className='details-sidebar'\n      ref={ref}\n      as={Segment.Group}\n      animation='overlay'\n      icon='labeled'\n\n      direction={direction}\n      visible={visible}\n      width={width}\n      onShow={handleShow}\n    >\n      <Segment padded>\n        <Header>\n          <Icon name='money bill alternate' />\n          <Header.Content>Currency info</Header.Content>\n        </Header>\n      </Segment>\n\n      <Segment textAlign='center'>\n        <Header sub textAlign='left'>Currency ID:</Header>\n        <Message size='small' color='blue'>{hash}</Message>\n        <p>{name}</p>\n      </Segment>\n\n      <Segment.Group>\n\n        <Segment.Group horizontal>\n          <Segment>\n            <Header sub>Demurrage rate (per month):</Header>\n            {demurrage && demurrage.toFixed(2)}%\n            <Header sub>participants registered:</Header>\n            {participantCount}\n            <Header sub>participants registered in last ceremony:</Header>\n            {lastParticipantCount}\n          </Segment>\n          <Segment>\n            <Header sub>Money supply:</Header>\n            <p>{ !isNaN(moneySupply) && (new BigFormat(moneySupply)).toFormat(2) }</p>\n            <Header sub>meetups assigned:</Header>\n            {meetupCount}\n            <Header sub>meetups assigned in last ceremony:</Header>\n            {lastMeetupCount}\n          </Segment>\n        </Segment.Group>\n\n        <Segment loading={!bootstrappers.length} stacked>\n          <Header sub>List of bootstrappers:</Header>\n          <List>{\n            bootstrappers.map(\n              _ => <List.Item key={_}>{_}</List.Item>\n            )\n          }</List>\n        </Segment>\n\n      </Segment.Group>\n\n      <Segment textAlign='right' className='map-sidebar-close'>\n        <Button\n          content='Close'\n          icon={'angle ' + (isVertical ? 'down' : 'right')}\n          labelPosition='right'\n          onClick={onClose}/>\n      </Segment>\n\n    </Sidebar>\n  );\n}\n\nexport default React.memo(function MapSidebar (props) {\n  const { api } = props;\n  return api && api.query ? (\n    <MapSidebarMain {...props} />\n  ) : null;\n}, (prev, cur) => (\n  prev.hash === cur.hash && (\n    cur.hash\n      ? prev.participantCount === cur.participantCount &&\n      prev.lastParticipantCount === cur.lastParticipantCount &&\n      prev.meetupCount === cur.meetupCount &&\n      prev.lastMeetupCount === cur.lastMeetupCount\n      : true)\n));\n","import * as L from 'leaflet';\n\nconst DivIcon = L.divIcon;\n\nconst commonClassName = 'marker-cluster marker-cluster-small ';\nconst markerClassName = commonClassName.concat('encoiner-community-icon');\nconst clusterClassName = commonClassName.concat('encoiner-cluster-custom');\n\nconst iconSize = [40, 40];\n\nexport const icon = (className, count) => new DivIcon({\n  iconSize,\n  className: ''.concat(className),\n  html: '<div><span>'.concat(count, '</span></div>')\n});\n\nexport const communityIcon = (className) => icon(markerClassName.concat(' ', className), '$');\n\nexport const clusterIcon = (className, count) => icon(clusterClassName.concat(' ', className), count);\n\nexport const iconActive = communityIcon('');\n\nexport const iconActivePulse = communityIcon('pulse');\n\nexport const iconSemiactivePulse = communityIcon('yellow pulse');\n\nexport const iconSemiactive = communityIcon('yellow');\n\nexport const iconInactive = communityIcon('red');\n\nexport const locationMarker = new L.Icon({\n  iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nexport const getClusterIcon = (phase, count, active) => {\n  let className;\n  if (phase === 0) { // in REGISTERING phase\n    className = count ? 'green' : 'yellow'; // green if >0 registered\n  } else if (count !== 0) {\n    className = count > 1 ? 'green' : 'yellow'; // if 1 meetup then yellow, if >1 green\n  } else {\n    className = 'red'; // in ASSIGNING and ATTESTING if 0 meetups\n  }\n  if (active) { // animated icon\n    return className.concat(' pulse');\n  } else {\n    return className;\n  }\n};\n","import React, { useEffect, useRef, useReducer } from 'react';\nimport { Marker, Tooltip } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { iconActive, iconActivePulse, iconSemiactive, iconSemiactivePulse, iconInactive, clusterIcon, getClusterIcon } from './MarkerIcon';\n\nconst pulseTimer = 3000;\nconst iconSize = [40, 40];\n\nconst iconSet = {\n  'green pulse': iconActivePulse,\n  'yellow pulse': iconSemiactivePulse,\n  'red pulse': iconSemiactivePulse,\n  green: iconActive,\n  yellow: iconSemiactive,\n  red: iconInactive\n};\n\nconst getIcon = (phase, count, active) => {\n  const iconClass = getClusterIcon(phase, count, active);\n  return iconSet[iconClass];\n};\n\nconst createClusterCustomIcon = function (cluster) {\n  const markers = cluster.getAllChildMarkers();\n  const phase = markers[0].options.phase;\n  const count = markers\n    .map(it => it.options.count)\n    .reduce((acc, it) => it > acc ? it : acc, 0);\n  const active = markers\n    .map(it => it.options.active)\n    .reduce((acc, it) => it || acc, false);\n\n  const iconClass = getClusterIcon(phase, count, active);\n  const markerCount = cluster.getChildCount();\n  return clusterIcon(iconClass, markerCount);\n};\n\nconst initialState = {\n  timers: {},\n  byCID: {},\n  phase: -1\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'initialize':\n      return ((state, action) => {\n        const { phase, byCID } = action.payload;\n        return { ...state, byCID, phase };\n      })(state, action);\n\n    case 'phase':\n      return { ...state, phase: action.payload };\n\n    case 'reset':\n      return ((state, action) => {\n        const { phase, byCID } = action.payload;\n        const markers = { ...state.byCID };\n        for (const cid in markers) {\n          markers[cid].count = byCID[cid] || 0;\n        }\n        return { ...state, byCID: markers, phase };\n      })(state, action);\n\n    case 'activate':\n      return ((state, action) => {\n        const { payload } = action;\n        const { timers } = payload;\n        const byCID = { ...state.byCID, ...payload.byCID };\n        for (const tid in timers) {\n          state.timers[tid] && clearTimeout(state.timers[tid]);\n        }\n        return { ...state, byCID, timers: { ...state.timers, ...timers } };\n      })(state, action);\n\n    case 'deactivate':\n      return ((state, action) => {\n        const cid = action.payload;\n        const byCID = { ...state.byCID };\n        const timers = { ...state.timers };\n        byCID[cid] = { ...byCID[cid], active: false };\n        clearTimeout(timers[cid]);\n        timers[cid] = 0;\n        return { ...state, byCID, timers };\n      })(state, action);\n    default:\n      return state;\n  }\n};\n\n/// communities markers layer with clusterization\nexport function CommunitiesClusters (props) {\n  const { cids, data, selected, state } = props;\n  const [markers, dispatch] = useReducer(reducer, initialState);\n  const ref = useRef(null);\n  const handleMarkerClick = _ => _.sourceTarget.options.alt && props.onClick(_.sourceTarget.options.alt);\n  const phase = state.subscribtionPhase;\n  const counters = state[['participants', 'meetups', 'meetups'][phase]]; // counter for each phase is meetups\n  const attestations = state.attestations; // counter for ATTESTING phase is meetups\n  const byCID = markers.byCID;\n\n  /// Init markers\n  if (markers.phase === -1 && phase !== -1) {\n    const byCID = cids.map(cid => {\n      const { position, name } = data[cid];\n      const meetups = state.meetups[cid] || 0;\n      const count = phase ? meetups : (counters[cid] || 0);\n      const attests = phase === 2 ? (attestations[cid] || 0) : 0;\n      return {\n        name,\n        key: cid,\n        position,\n        active: false,\n        count,\n        attests\n      };\n    }).reduce((acc, marker) => {\n      acc[marker.key] = marker;\n      return acc;\n    }, {});\n    dispatch({ type: 'initialize', payload: { byCID, phase } });\n  } else if (phase > markers.phase || (phase === 0 && markers.phase === 2)) {\n    /// Reset counters\n    dispatch({ type: 'reset', payload: { byCID: counters, phase } });\n  }\n\n  /// Update counters\n  useEffect(() => { /* eslint-disable react-hooks/exhaustive-deps */\n    const newMarkers = {};\n    const timers = {};\n    cids.forEach((cid) => {\n      const counter = counters ? (counters[cid] || 0) : 0;\n      const attests = attestations ? attestations[cid] : 0;\n      if (markers.byCID[cid] && (markers.byCID[cid].count < counter ||\n          markers.byCID[cid].attests < attests)) {\n        newMarkers[cid] = markers.byCID[cid];\n        newMarkers[cid].count = counter;\n        newMarkers[cid].attests = attestations[cid] || 0;\n        newMarkers[cid].active = true;\n        timers[cid] = setTimeout(() => {\n          dispatch({ type: 'deactivate', payload: cid });\n        }, pulseTimer);\n      }\n    });\n    dispatch({ type: 'activate', payload: { byCID: newMarkers, timers } });\n  }, [counters, attestations, cids]);\n\n  // Update clusters\n  useEffect(() => {\n    let tid;\n    const active = [];\n    for (const cid in markers.byCID) {\n      if (markers.byCID[cid].active) {\n        active.push(cid);\n      }\n    }\n    if (active.length) {\n      tid = setTimeout(() => { // redraw clusters\n        if (ref.current !== null && ref.current.leafletElement) {\n          ref.current.leafletElement.refreshClusters();\n        }\n      }, 10);\n    }\n\n    return () => {\n      tid && clearTimeout(tid);\n    };\n  }, [byCID]);\n\n  return (\n    <MarkerClusterGroup ref={ref} onClick={handleMarkerClick}\n      iconCreateFunction={createClusterCustomIcon}\n      chunkedLoading={true}\n    >{\n        cids.map(cid => {\n          const { position, name } = data[cid];\n          const { active, count, attests } = byCID[cid] || {};\n          const isSelected = selected === cid;\n          return (isSelected ? null : <Marker\n            key={cid.concat(phase, attests, count, active ? 'force-redraw' : '')}\n            position={position}\n            alt={cid}\n            count={count}\n            active={active}\n            phase={phase}\n            attests={attests}\n            icon={ getIcon(markers.phase, count, active) }>\n            <Tooltip direction='top' offset={[0, iconSize[1] / -2]}>{name}</Tooltip>\n          </Marker>);\n        })\n      }</MarkerClusterGroup>);\n}\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport { Marker } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\n\nimport { locationMarker, clusterIcon, getClusterIcon } from './MarkerIcon';\n\nconst pulseTimer = 3000;\n\nconst createClusterCustomIcon = function (cluster) {\n  const markers = cluster.getAllChildMarkers();\n  const phase = markers[0].options.phase;\n  const count = markers[0].options.count;\n  const active = markers[0].options.active;\n  const markerCount = markers.length;\n  return clusterIcon(getClusterIcon(phase, count, active), markerCount);\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'reset':\n      return { active: false, count: 0, attest: 0, timeout: state.timeout };\n    case 'activate':\n      return ((state, action) => {\n        const { count, timeout, attest } = action.payload;\n        return { ...state, active: true, count, attest, timeout };\n      })(state, action);\n    case 'deactivate':\n      return ((state, action) => {\n        clearTimeout(state.timeout);\n        return { ...state, active: false };\n      })(state, action);\n    default:\n      return state;\n  }\n};\n\n/// Markers layer\nexport function LocationsLayer (props) {\n  const { phase, meetupCount, participantCount, attestationCount: attest } = props;\n  const { coords } = props.data;\n  const ref = useRef(null);\n  const count = phase === 0 ? participantCount : meetupCount;\n  const [state, dispatch] = useReducer(reducer, { active: false, count, attest });\n\n  const active = state.active;\n\n  /// Trigger active\n  useEffect(() => {\n    if (count === 0 && phase === 0 && (state.attest > 0 || state.count > 0)) {\n      dispatch({ type: 'reset' });\n      return;\n    }\n    if (state.count < count || state.attest < attest) {\n      const timeout = setTimeout(() => {\n        dispatch({ type: 'deactivate' });\n      }, pulseTimer);\n      dispatch({ type: 'activate', payload: { count, timeout, attest } });\n    }\n  }, [state, count, attest, phase]);\n\n  // Update clusters\n  useEffect(() => {\n    let tid;\n    if (active) {\n      tid = setTimeout(() => { // redraw clusters\n        if (ref.current !== null && ref.current.leafletElement) {\n          ref.current.leafletElement.refreshClusters();\n        }\n      }, 10);\n    }\n\n    return () => {\n      tid && clearTimeout(tid);\n    };\n  }, [active]);\n\n  if (!coords || !coords.length) {\n    return null;\n  }\n\n  return (<MarkerClusterGroup ref={ref} iconCreateFunction={createClusterCustomIcon}>{\n    coords.map((pos, idx) => (\n      <Marker\n        position={pos}\n        key={''.concat(idx, count, attest, active ? 'force-redraw' : '')}\n        phase={phase}\n        count={count}\n        attest={state.attest}\n        active={active}\n        icon={locationMarker} />))\n  }</MarkerClusterGroup>);\n}\n","import React, { useEffect, useState, useRef, useReducer } from 'react';\nimport { Map as LMap, TileLayer } from 'react-leaflet';\nimport { Sidebar, Responsive, Segment } from 'semantic-ui-react';\nimport * as L from 'leaflet';\nimport * as bs58 from 'bs58';\nimport { u32 as U32 } from '@polkadot/types/primitive';\nimport { u8aToString } from '@polkadot/util';\n\nimport { useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport MapMenu from './map/MapMenu';\nimport MapCeremonyPhases from './map/MapCeremonyPhases';\nimport MapNodeInfo from './map/MapNodeInfo';\nimport MapControl from './map/MapControl';\nimport MapSidebar from './map/MapSidebar';\n\nimport { CommunitiesClusters } from './map/CommunitiesClusters';\nimport { LocationsLayer } from './map/LocationsLayer';\nimport { parseI32F32, parseI64F64, batchFetch } from './utils';\n\nimport 'leaflet/dist/leaflet.css';\nimport 'react-leaflet-markercluster/dist/styles.min.css';\n\nconst initialPosition = L.latLng(47.166168, 8.515495);\n\n/// Parse only 16 bits of fractional part\nconst parseLatLng = _ => parseI32F32(_, 16);\n\nconst toLatLng = location => [\n  parseLatLng(location.lat),\n  parseLatLng(location.lon)\n];\n\nconst BLOCKS_PER_MONTH = (86400 / 6) * (356 / 12);\n\nconst parseDemurrage = _ => (1 - Math.exp(-1 * parseI64F64(_) * BLOCKS_PER_MONTH)) * 100;\n\nconst tileSetup = {\n  url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  attribution: '&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n};\n\nconst apiReady = (api, queryName = '') => {\n  const query = api && api.queryMulti && api.query;\n  return query && queryName ? (!!query[queryName]) : !!query;\n};\n\n// Ceremony Phases\nconst ceremonyPhases = {\n  REGISTERING: 0,\n  ASSIGNING: 1,\n  ATTESTING: 2\n};\n\nconst sumUp = obj => Object.keys(obj).reduce((acc, it) => { acc = acc + obj[it]; return acc; }, 0);\n\nconst initialState = {\n  subscribtionCeremony: 0,\n  subscribtionPhase: -1,\n  lastCeremony: {\n    participants: {},\n    meetups: {},\n    attestations: {}\n  },\n  subscribtions: [],\n  participantCount: 0,\n  meetupCount: 0,\n  attestationCount: 0,\n  participants: {},\n  meetups: {},\n  attestations: {}\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'unsubscribeAll':\n      state.subscribtions.forEach(unsub => unsub());\n      return { ...state, subscribtions: [] };\n\n    case 'subscribe':\n      state.subscribtions.forEach(unsub => unsub());\n      return { ...state, ...action.payload };\n\n    case 'participants':\n      return ((state, action) => {\n        const participants = { ...state.participants, [action.payload.cid]: action.payload.count };\n        const participantCount = sumUp(participants);\n        return { ...state, participants, participantCount };\n      })(state, action);\n\n    case 'meetups':\n      return ((state, action) => {\n        const meetups = { ...state.meetups, [action.payload.cid]: action.payload.count };\n        const meetupCount = sumUp(meetups);\n        return { ...state, meetups, meetupCount };\n      })(state, action);\n\n    case 'attestations':\n      return ((state, action) => {\n        const attestations = { ...state.attestations, [action.payload.cid]: action.payload.count };\n        const attestationCount = sumUp(attestations);\n        return {\n          ...state,\n          attestations,\n          attestationCount\n        };\n      })(state, action);\n\n    case 'last':\n      return {\n        ...state,\n        lastCeremony: action.payload\n      };\n\n    case 'reset':\n      state.subscribtions.forEach(unsub => unsub());\n      if (state.subscribtionCeremony && state.subscribtionCeremony !== state.lastCeremony.subscribtionCeremony) {\n        return {\n          ...initialState,\n          lastCeremony: {\n            subscribtionCeremony: state.subscribtionCeremony,\n            meetups: { ...state.meetups },\n            meetupCount: state.meetupCount,\n            attestations: { ...state.attestations },\n            attestationCount: state.attestationCount,\n            participants: { ...state.participants },\n            participantCount: state.participantCount,\n            subscribtions: null,\n            lastCeremony: null\n          }\n        };\n      } else {\n        return state;\n      }\n\n    default:\n      throw new Error('unknown action '.concat(action.type));\n  }\n};\n\nconst setters = ['participants', 'meetups', 'attestations']; // action names for each phase\n\nexport default function Map (props) {\n  const { debug } = props;\n  const mapRef = useRef();\n  const { api, apiState } = useSubstrate();\n\n  const [ui, setUI] = useState({ selected: '', loading: true, menu: false });\n  const [cids, setCids] = useState([]);\n  const [hash, setHash] = useState([]);\n  const [data, setData] = useState({});\n  const [position, setPosition] = useState(initialPosition);\n  const [currentPhase, setCurrentPhase] = useState({ phase: -1, timestamp: 0, timer: null });\n  const [ceremonyIndex, setCeremonyIndex] = useState(0);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const ec = api && api.query && api.query.encointerCurrencies;\n  const es = api && api.query && api.query.encointerScheduler;\n\n  /// Fetch locations for each currency in parallel; Save to state once ready\n  async function fetchGeodataPar (cids, hash) { /* eslint-disable no-multi-spaces */\n    const kvReducer = (acc, data, idx) => { // convert array to key-value map\n      acc[hash[idx]] = data;                // where key is BASE58 of cid\n      return acc;\n    };\n\n    debug && console.log('FETCHING LOCATIONS AND PROPERTIES');\n    const [locations, properties] = await Promise.all([\n      await batchFetch(         // Fetching all Locations in parallel\n        ec.locations,           // API: encointerCurrencies.locations(cid) -> Vec<Location>\n        cids,                   // array of parameters to method\n        _ => _.map(toLatLng)    // convert Location from I32F32 to LatLng\n      ),                        // Fetching all Currency Properties\n      await batchFetch(ec.currencyProperties, cids)]);\n\n    debug && console.log('SETTING DATA', locations, properties);\n\n    setData(cids.map((cid, idx) => ({ // Shape of data in UI\n      cid,                            // cid for back-reference\n      coords: locations[idx],         // all coords\n      position: L.latLngBounds(locations[idx]).getCenter(),\n      demurrage: parseDemurrage(properties[idx].demurrage_per_block),\n      demurragePerBlock: parseI64F64(properties[idx].demurrage_per_block),\n      name: u8aToString(properties[idx].name_utf8)\n    })).reduce(kvReducer, {}));\n    setUI({ ...ui, loading: false });\n  }\n\n  /// Update current phase\n  useEffect(() => {\n    let unsub;\n    debug && console.log('phase', currentPhase.phase);\n    if (!apiReady(api, 'encointerScheduler')) {\n      return;\n    }\n\n    const {\n      encointerScheduler: {\n        currentPhase: getCurrentPhase,\n        nextPhaseTimestamp: getNextPhaseTimestamp\n      }\n    } = api.query;\n\n    getCurrentPhase(newPhase => {\n      const phase = newPhase.toNumber();\n      if (currentPhase.phase !== phase) {\n        getNextPhaseTimestamp()\n          .then(newPhaseTimestamp => {\n            const timestamp = newPhaseTimestamp.toNumber();\n            setCurrentPhase({ phase, timestamp });\n          })\n          .catch(console.error);\n      }\n    }).then((unsubscribe) => {\n      unsub = unsubscribe;\n    });\n    return () => {\n      unsub && unsub();\n    };\n  }, [currentPhase.phase, debug, ec, api]);\n\n  /// Update ceremony index once registration phase starts\n  useEffect(() => { /* eslint-disable react-hooks/exhaustive-deps */\n    if (!apiReady(api, 'encointerScheduler')) {\n      return;\n    }\n    const {\n      encointerScheduler: {\n        currentCeremonyIndex: getCurrentCeremonyIndex\n      }\n    } = api.query;\n    debug && console.log('ceremony id', currentPhase.phase, ceremonyIndex);\n    const CurrencyCeremony = api.registry.getOrUnknown('CurrencyCeremony');\n\n    /// Fetch participants and meetups counters\n    const fetchHistoricData = async (ceremony, phase, cids) => {\n      if (!apiReady(api, 'encointerCeremonies')) {\n        return;\n      }\n      const ceremonyNumber = ceremony.toNumber();\n      if (ceremonyNumber <= state.subscribtionCeremony && phase === 0) {\n        return;\n      }\n      const {\n        encointerCeremonies: {\n          participantCount: getParticipantCount,\n          meetupCount: getMeetupCount\n        }\n      } = api.query;\n      // Previous Phases of current Ceremony\n      for (let oldPhase = 0; oldPhase < phase; oldPhase++) {\n        cids.forEach(cid => {\n          const currencyCeremony = new CurrencyCeremony(api.registry, [cid, ceremony]);\n          const getters = [getParticipantCount, getMeetupCount];\n          const getter = getters[oldPhase];\n          debug && console.log('hist ', bs58.encode(cid), ceremony.toNumber(), oldPhase);\n          getter(currencyCeremony).then((_) => dispatch({\n            type: setters[oldPhase],\n            payload: {\n              cid: bs58.encode(cid),\n              count: _.toNumber()\n            }\n          }));\n        });\n      }\n    };\n\n    /// Fetch participants and meetups counters\n    const fetchLastCeremony = async (ceremony, cids) => {\n      if (!apiReady(api, 'encointerCeremonies')) {\n        return;\n      }\n      const {\n        encointerCeremonies: {\n          participantCount: getParticipantCount,\n          meetupCount: getMeetupCount\n        }\n      } = api.query;\n      // Last Ceremony\n      const lastCeremony = ceremony.sub(new U32(api.registry, 1));\n      const lastCeremonyData = await Promise.all(cids.map(cid => {\n        const currencyCeremony = new CurrencyCeremony(api.registry, [cid, lastCeremony]);\n        return api.queryMulti([\n          [getParticipantCount, currencyCeremony],\n          [getMeetupCount, currencyCeremony]\n        ]);\n      }));\n      const payload = lastCeremonyData.reduce((acc, data, idx) => {\n        const cid = bs58.encode(cids[idx]);\n        const [participantCount, meetupCount] = data;\n        acc.meetups[cid] = meetupCount.toNumber();\n        acc.participants[cid] = participantCount.toNumber();\n        acc.participantCount = acc.participants[cid] + acc.participantCount;\n        acc.meetupCount = acc.meetups[cid] + acc.meetupCount;\n        return acc;\n      }, {\n        subscribtionCeremony: lastCeremony.toNumber(),\n        meetups: {},\n        participants: {},\n        participantCount: 0,\n        meetupCount: 0\n      });\n      dispatch({\n        type: 'last',\n        payload\n      });\n    };\n\n    /// Subscription management via reducer\n    const subscribeToUpdates = async function (ceremony, phase, cids) {\n      if (!apiReady(api, 'encointerCeremonies')) {\n        return;\n      }\n      const ceremonyNumber = ceremony.toNumber();\n      if (ceremonyNumber <= state.subscribtionCeremony && phase <= state.subscribtionPhase) {\n        return;\n      }\n\n      debug && console.log('subscribe to ceremony', ceremonyNumber, phase);\n      const {\n        encointerCeremonies: {\n          participantCount: getParticipantCount,\n          attestationCount: getAttestationCount,\n          meetupCount: getMeetupCount\n        }\n      } = api.query;\n      const getters = [getParticipantCount, getMeetupCount, getAttestationCount];\n      const CurrencyCeremony = api.registry.getOrUnknown('CurrencyCeremony');\n      const unsubs = await Promise.all(cids.map(cid => {\n        const currencyCeremony = new CurrencyCeremony(api.registry, [cid, ceremonyIndex]);\n        const getter = getters[phase];\n        return getter(currencyCeremony, (_) => dispatch({\n          type: setters[phase],\n          payload: {\n            cid: bs58.encode(cid),\n            count: _.toNumber()\n          }\n        }));\n      }));\n\n      dispatch({\n        type: 'subscribe',\n        payload: {\n          subscribtions: unsubs,\n          subscribtionCeremony: ceremonyNumber,\n          subscribtionPhase: phase\n        }\n      });\n    };\n\n    if (!ceremonyIndex) {\n      getCurrentCeremonyIndex().then((currentCeremonyIndex) => {\n        debug && console.log('set ceremonyIndex', currentCeremonyIndex.toString());\n        setCeremonyIndex(currentCeremonyIndex);\n      });\n    } else if (currentPhase.phase !== -1 &&\n        (currentPhase.phase !== state.subscribtionPhase ||\n         ceremonyIndex.toNumber() !== state.subscribtionCeremony) &&\n        cids.length) {\n      subscribeToUpdates(ceremonyIndex, currentPhase.phase, cids);\n      fetchHistoricData(ceremonyIndex, currentPhase.phase, cids);\n      !state.lastCeremony.subscribtionCeremony && fetchLastCeremony(ceremonyIndex, cids);\n    }\n    if (currentPhase.phase === ceremonyPhases.REGISTERING) {\n      state.subscribtionCeremony !== state.lastCeremony.subscribtionCeremony &&\n        dispatch({ type: 'reset' }); // reset state on start of new ceremony\n      getCurrentCeremonyIndex().then((currentCeremonyIndex) => {\n        debug && console.log('set ceremonyIndex', currentCeremonyIndex.toString());\n        setCeremonyIndex(currentCeremonyIndex);\n      });\n    }\n  }, [currentPhase.phase, ceremonyIndex, cids, es, debug, api, setters]);\n\n  /// Load currencies identifiers once\n  useEffect(() => {\n    debug && console.log('cids', cids);\n\n    if (ec && cids.length === 0) {\n      ec.currencyIdentifiers()\n        .then(cids => {\n          const hashes = cids.map(bs58.encode);\n          setCids(cids);\n          setHash(hashes);\n        })\n        .catch(err => console.error(err));\n    }\n  }, [cids, debug, ec]);\n\n  /// Get locations effect\n  useEffect(() => { /* eslint-disable react-hooks/exhaustive-deps */\n    debug && console.log('get locations');\n    if (cids.length && cids.length === hash.length) {\n      fetchGeodataPar(cids, hash);\n    }\n  }, [cids, hash]);\n\n  /// Attempt geolocation\n  useEffect(() => {\n    debug && console.log('get position');\n    const map = mapRef.current;\n    if (map != null && position === initialPosition) {\n      map.leafletElement.locate();\n    }\n  }, [mapRef, position]);\n\n  /// Update map after resize\n  useEffect(() => {\n    debug && console.log('update resize');\n    const map = mapRef.current && mapRef.current.leafletElement;\n    map && setTimeout(_ => map.invalidateSize(), 50);\n  }, [ui.sidebarSize]);\n\n  /// Handler generator for zoom in/out\n  function handlerZoom (s) {\n    return () => mapRef.current.leafletElement[s < 0 ? 'zoomOut' : 'zoomIn']();\n  }\n\n  /// Resize leaflet map when sidebar shown\n  function calcMapOffset () {\n    const full = '100%';\n    // should reposition markers in portrait mode if sidebar shown\n    if (ui.portrait && ui.selected && ui.sidebarSize && mapRef.current !== null) {\n      if (mapRef.current.container.style.height === '100%') {\n        const offset = mapRef.current.container.offsetHeight - ui.sidebarSize;\n        return `${offset}px`;\n      } else {\n        return mapRef.current.container.style.height;\n      }\n    }\n    return full;\n  }\n\n  /// Reset marker to my position\n  const handleLocationFound = e => {\n    setPosition(e.latlng);\n    const map = mapRef.current.leafletElement;\n    map.flyTo(e.latlng);\n    map.setZoom(8);\n  };\n\n  /// Handler for click on currency marker\n  const handleCurrencyMarkerClick = cid => {\n    const map = mapRef.current.leafletElement;\n    setUI({ ...ui, selected: cid, prevZoom: map.getZoom() });\n    const bounds = L.latLngBounds(data[cid].coords).pad(2);\n    map.fitBounds(bounds);\n  };\n\n  /// Handler for window resize\n  const handleResponsibleUpdate = (_, { width }) =>\n    setUI({ ...ui, portrait: width < Responsive.onlyMobile.maxWidth, width });\n\n  /// Handler for sidebar closing\n  const handleSidebarClosed = () => {\n    const map = mapRef.current.leafletElement;\n    map.setZoom(ui.prevZoom);\n    setUI({ ...ui, selected: '', sidebarSize: 0 });\n  };\n\n  /// Handler for sidebar shows completely\n  const handleSidebarShow = sidebarSize =>\n    setUI({ ...ui, sidebarSize, menu: false });\n\n  /// Show left side menu\n  const toggleMenu = () => setUI({\n    ...ui,\n    menu: !ui.menu,\n    selected: ui.menu ? ui.selected : '',\n    sidebarSize: ui.menu ? ui.sidebarSize : 0\n  });\n\n  /// Close left side menu if clicked\n  const handleMapClick = () =>\n    ui.menu && setUI({ ...ui, menu: false });\n\n  return (\n    <Responsive\n      as={Segment.Group}\n      className='encointer-map'\n      fireOnMount\n      onUpdate={handleResponsibleUpdate}>\n\n      <Sidebar.Pushable as={Segment}  className='component-wrapper'>\n\n        <MapMenu visible={ui.menu} />\n\n        <MapSidebar\n          api={api}\n          apiState={apiState}\n          onClose={handleSidebarClosed}\n          onShow={handleSidebarShow}\n          hash={ui.selected}\n          direction={ui.portrait ? 'bottom' : 'right'}\n          width='very wide'\n          data={data[ui.selected] || {}}\n          participantCount={ui.selected ? (state.participants[ui.selected] || 0) : 0}\n          lastParticipantCount={ui.selected ? state.lastCeremony.participants[ui.selected] : 0}\n          meetupCount={ui.selected ? (state.meetups[ui.selected] || 0) : 0}\n          lastMeetupCount={ui.selected ? state.lastCeremony.meetups[ui.selected] : 0}\n          debug={debug}\n        />\n\n        <Sidebar.Pusher className='encointer-map-wrapper'\n          style={{ marginRight: ui.portrait ? '0' : ui.sidebarSize + 'px' }}>\n\n          <MapCeremonyPhases\n            small={ui.portrait}\n            participantCount={state.participantCount}\n            meetupCount={state.meetupCount}\n            attestationCount={state.attestationCount}\n            currentPhase={currentPhase} />\n\n          <MapNodeInfo\n            api={api}\n            apiState={apiState}\n            style={ui.portrait && ui.selected ? { display: 'none' } : {}} />\n\n          <MapControl\n            onClick={toggleMenu}\n            loading={ui.loading}\n            onZoomIn={handlerZoom(1)}\n            onZoomOut={handlerZoom(-1)} />\n\n          <LMap\n            center={position}\n            zoom={4}\n            ref={mapRef}\n            zoomControl={false}\n            touchZoom={true}\n            onClick={handleMapClick}\n            style={{ height: calcMapOffset() }}\n            onLocationFound={handleLocationFound}>\n\n            <TileLayer {...tileSetup} />\n\n            { ui.selected\n              ? <LocationsLayer\n                participantCount={ui.selected ? (state.participants[ui.selected] || 0) : 0}\n                meetupCount={ui.selected ? (state.meetups[ui.selected] || 0) : 0}\n                attestationCount={ui.selected ? (state.attestations[ui.selected] || 0) : 0}\n                phase={currentPhase.phase}\n                data={data[ui.selected]}\n              />\n              : null }\n\n            { !ui.loading\n              ? <CommunitiesClusters\n                data={data}\n                cids={hash}\n                state={state}\n                onClick={handleCurrencyMarkerClick}\n                selected={ui.selected} />\n              : null }\n\n          </LMap>\n\n        </Sidebar.Pusher>\n\n      </Sidebar.Pushable>\n\n      { (debug && apiState === 'READY')\n        ? <DeveloperConsole />\n        : null }\n\n    </Responsive>\n  );\n}\n","import React from 'react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { SubstrateContextProvider } from './substrate-lib';\n\nimport Map from './Map';\nimport './style.css';\n\nfunction Main () {\n  return (<Map debug />);\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}